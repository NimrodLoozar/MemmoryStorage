version: '3.8'

services:
  memmorystorage:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: memmorystorage-dev
    ports:
      # Metro bundler
      - "8081:8081"
      # Expo dev tools  
      - "19000:19000"
      - "19001:19001"
      # Web development
      - "19002:19002"
    volumes:
      # Mount source code for live reloading
      - .:/app
      # Prevent node_modules from being overwritten
      - /app/node_modules
      # Mount memory images folder
      - ./assets/images/memmory:/app/assets/images/memmory
    environment:
      - NODE_ENV=development
      - EXPO_DEVTOOLS_LISTEN_ADDRESS=0.0.0.0
      - REACT_NATIVE_PACKAGER_HOSTNAME=0.0.0.0
      - CHOKIDAR_USEPOLLING=true
      - NPM_CONFIG_UPDATE_NOTIFIER=false
      - NPM_CONFIG_FUND=false
    command: npm start
    networks:
      - memmorystorage-network
    restart: unless-stopped
    stdin_open: true
    tty: true
    # Security configurations
    read_only: false  # Need write access for development
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - DAC_OVERRIDE
      - SETGID
      - SETUID
    user: "1001:1001"  # Run as non-root user

  # Optional: Web-only development server
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: memmorystorage-web
    ports:
      - "3000:19006"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - EXPO_DEVTOOLS_LISTEN_ADDRESS=0.0.0.0
      - NPM_CONFIG_UPDATE_NOTIFIER=false
      - NPM_CONFIG_FUND=false
    command: npm run web
    networks:
      - memmorystorage-network
    profiles:
      - web-only
    restart: unless-stopped
    # Security configurations
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - DAC_OVERRIDE
      - SETGID
      - SETUID
    user: "1001:1001"  # Run as non-root user

networks:
  memmorystorage-network:
    driver: bridge

volumes:
  node_modules:
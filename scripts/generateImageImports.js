const fs = require('fs');
const path = require('path');

// Paths
const imagesDir = path.join(__dirname, '../assets/images/memmory');
const outputFile = path.join(__dirname, '../utils/memoryImages.ts');

// Supported image extensions
const supportedExtensions = ['.png', '.jpg', '.jpeg', '.gif', '.webp'];

function generateImageImports() {
  try {
    // Read all files from the memmory directory
    const files = fs.readdirSync(imagesDir);
    
    // Filter for image files only
    const imageFiles = files.filter(file => {
      const ext = path.extname(file).toLowerCase();
      return supportedExtensions.includes(ext);
    });

    console.log(`Found ${imageFiles.length} image files:`, imageFiles);

    // Generate the imports object
    const imports = imageFiles.map(file => {
      return `  '${file}': require('@/assets/images/memmory/${file}'),`;
    }).join('\n');

    // Generate the complete file content
    const fileContent = `// Memory Images Auto-Loader
// Automatically loads all images from the assets/images/memmory/ folder
// This file is auto-generated by scripts/generateImageImports.js

// Auto-generated imports - these are updated by the build script
const imageImports = {
${imports}
};

// Export array of all memory images
export const memoryImages = Object.values(imageImports);

// Export images with their filenames for reference
export const memoryImageMap = imageImports;

// Get all available image filenames
export const getImageFilenames = () => Object.keys(imageImports);

// Helper function to get total count
export const getMemoryCount = () => memoryImages.length;

// Helper function to get a specific memory image
export const getMemoryImage = (index: number) => {
  if (index >= 0 && index < memoryImages.length) {
    return memoryImages[index];
  }
  return memoryImages[0]; // fallback to first image
};

// Helper function to get image by filename
export const getMemoryImageByFilename = (filename: string) => {
  return memoryImageMap[filename] || memoryImages[0];
};
`;

    // Write the generated content to the file
    fs.writeFileSync(outputFile, fileContent, 'utf8');
    console.log(`✅ Successfully generated ${outputFile} with ${imageFiles.length} images`);
    
  } catch (error) {
    console.error('❌ Error generating image imports:', error);
    process.exit(1);
  }
}

// Run the generator
generateImageImports();
